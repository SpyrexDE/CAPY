[gd_scene load_steps=18 format=3 uid="uid://b1ijuhrmuak2d"]

[ext_resource type="PackedScene" uid="uid://c2foohcg7psea" path="res://src/characters/player/Player.tscn" id="1"]
[ext_resource type="PackedScene" uid="uid://dv7itpsiu72vg" path="res://src/props/sd_platform/SDPlatform.tscn" id="3"]
[ext_resource type="PackedScene" uid="uid://k2yepueoprnw" path="res://src/props/moving_platform/PlatformMover.tscn" id="4"]
[ext_resource type="Material" uid="uid://drso5nq0fejpd" path="res://src/postprocessing/materials/tileset/grass_material.tres" id="4_hpa83"]
[ext_resource type="PackedScene" uid="uid://dhh1kqclqlqxi" path="res://src/items/melon_seed/MelonSeed.tscn" id="5"]
[ext_resource type="PackedScene" uid="uid://7reym7j4d8vh" path="res://src/props/spike/spike.tscn" id="5_mc1tl"]
[ext_resource type="Script" path="res://src/global/classes/level_loading/level_switcher.gd" id="7_2k86t"]
[ext_resource type="Texture2D" uid="uid://bwhiq2f4ga74d" path="res://src/tilesets/area01/GroundGrass.png" id="8_kcrji"]

[sub_resource type="GDScript" id="GDScript_lleje"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_ycmyg"]
texture = ExtResource("8_kcrji")
texture_region_size = Vector2i(100, 100)
0:0/0 = 0
0:0/0/material = ExtResource("4_hpa83")
0:0/0/terrain_set = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -37, -30, -50, 50, -50, 50, 50, -50, 50)
0:0/0/terrains_peering_bit/bottom_right_corner = 0
0:1/0 = 0
0:1/0/terrain_set = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 50, -50, 50, 50, -50, 50)
0:1/0/terrains_peering_bit/bottom_right_corner = 0
0:1/0/terrains_peering_bit/top_right_corner = 0
0:2/0 = 0
0:2/0/terrain_set = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 50, -50, 50, 50, -24, 50, -50, 33)
0:2/0/terrains_peering_bit/top_right_corner = 0
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
0:4/0 = 0
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
0:5/0 = 0
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
0:6/0 = 0
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
1:0/0 = 0
1:0/0/material = ExtResource("4_hpa83")
1:0/0/terrain_set = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 50, -50, 50, 50, -50, 50)
1:0/0/terrains_peering_bit/bottom_right_corner = 0
1:0/0/terrains_peering_bit/bottom_left_corner = 0
1:1/0 = 0
1:1/0/terrain_set = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, -50, 50, 50, 50, 50, -50)
1:1/0/terrains_peering_bit/bottom_right_corner = 0
1:1/0/terrains_peering_bit/bottom_left_corner = 0
1:1/0/terrains_peering_bit/top_left_corner = 0
1:1/0/terrains_peering_bit/top_right_corner = 0
1:2/0 = 0
1:2/0/terrain_set = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 50, -50, 50, 50, -50, 50)
1:2/0/terrains_peering_bit/top_left_corner = 0
1:2/0/terrains_peering_bit/top_right_corner = 0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
1:5/0 = 0
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
1:6/0 = 0
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
2:0/0 = 0
2:0/0/material = ExtResource("4_hpa83")
2:0/0/terrain_set = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 30, -50, 50, -28, 50, 50, -50, 50)
2:0/0/terrains_peering_bit/bottom_left_corner = 0
2:1/0 = 0
2:1/0/terrain_set = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 50, -50, 50, 50, -50, 50)
2:1/0/terrains_peering_bit/bottom_left_corner = 0
2:1/0/terrains_peering_bit/top_left_corner = 0
2:2/0 = 0
2:2/0/terrain_set = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-50, -50, 50, -50, 50, 27, 25, 50, -50, 50)
2:2/0/terrains_peering_bit/top_left_corner = 0
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
2:4/0 = 0
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
2:5/0 = 0
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
2:6/0 = 0
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
3:4/0 = 0
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
3:5/0 = 0
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
3:6/0 = 0
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
4:4/0 = 0
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
4:6/0 = 0
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:0/0 = 0
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
5:1/0 = 0
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
5:2/0 = 0
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
5:3/0 = 0
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
5:4/0 = 0
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
6:1/0 = 0
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
6:2/0 = 0
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
6:3/0 = 0
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
6:4/0 = 0
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
7:0/0 = 0
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
7:1/0 = 0
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
7:2/0 = 0
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
7:3/0 = 0
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
7:5/0 = 0
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
7:6/0 = 0
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:0/0 = 0
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
8:1/0 = 0
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
8:2/0 = 0
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
8:3/0 = 0
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
8:4/0 = 0
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
9:0/0 = 0
9:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:0/0/physics_layer_0/angular_velocity = 0.0
9:1/0 = 0
9:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:1/0/physics_layer_0/angular_velocity = 0.0
9:2/0 = 0
9:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:2/0/physics_layer_0/angular_velocity = 0.0
9:3/0 = 0
9:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:3/0/physics_layer_0/angular_velocity = 0.0
9:4/0 = 0
9:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:4/0/physics_layer_0/angular_velocity = 0.0
9:5/0 = 0
9:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:5/0/physics_layer_0/angular_velocity = 0.0
9:6/0 = 0
9:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:6/0/physics_layer_0/angular_velocity = 0.0
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
10:1/0 = 0
10:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:1/0/physics_layer_0/angular_velocity = 0.0
10:2/0 = 0
10:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:2/0/physics_layer_0/angular_velocity = 0.0
10:3/0 = 0
10:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:3/0/physics_layer_0/angular_velocity = 0.0
10:4/0 = 0
10:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:4/0/physics_layer_0/angular_velocity = 0.0
10:5/0 = 0
10:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:5/0/physics_layer_0/angular_velocity = 0.0
10:6/0 = 0
10:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:6/0/physics_layer_0/angular_velocity = 0.0
11:0/0 = 0
11:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:0/0/physics_layer_0/angular_velocity = 0.0
11:1/0 = 0
11:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:1/0/physics_layer_0/angular_velocity = 0.0
11:2/0 = 0
11:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:2/0/physics_layer_0/angular_velocity = 0.0
11:3/0 = 0
11:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:3/0/physics_layer_0/angular_velocity = 0.0
11:4/0 = 0
11:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:4/0/physics_layer_0/angular_velocity = 0.0
11:5/0 = 0
11:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:5/0/physics_layer_0/angular_velocity = 0.0
11:6/0 = 0
11:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
11:6/0/physics_layer_0/angular_velocity = 0.0
12:0/0 = 0
12:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:0/0/physics_layer_0/angular_velocity = 0.0
13:0/0 = 0
13:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:0/0/physics_layer_0/angular_velocity = 0.0
14:0/0 = 0
14:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:0/0/physics_layer_0/angular_velocity = 0.0
12:1/0 = 0
12:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:1/0/physics_layer_0/angular_velocity = 0.0
13:1/0 = 0
13:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:1/0/physics_layer_0/angular_velocity = 0.0
14:1/0 = 0
14:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:1/0/physics_layer_0/angular_velocity = 0.0
15:1/0 = 0
15:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:1/0/physics_layer_0/angular_velocity = 0.0
16:1/0 = 0
16:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:1/0/physics_layer_0/angular_velocity = 0.0
17:1/0 = 0
17:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:1/0/physics_layer_0/angular_velocity = 0.0
18:1/0 = 0
18:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:1/0/physics_layer_0/angular_velocity = 0.0
19:1/0 = 0
19:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:1/0/physics_layer_0/angular_velocity = 0.0
20:1/0 = 0
20:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:1/0/physics_layer_0/angular_velocity = 0.0
12:2/0 = 0
12:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:2/0/physics_layer_0/angular_velocity = 0.0
13:2/0 = 0
13:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:2/0/physics_layer_0/angular_velocity = 0.0
14:2/0 = 0
14:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:2/0/physics_layer_0/angular_velocity = 0.0
15:2/0 = 0
15:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:2/0/physics_layer_0/angular_velocity = 0.0
16:2/0 = 0
16:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:2/0/physics_layer_0/angular_velocity = 0.0
17:2/0 = 0
17:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:2/0/physics_layer_0/angular_velocity = 0.0
18:2/0 = 0
18:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:2/0/physics_layer_0/angular_velocity = 0.0
19:2/0 = 0
19:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:2/0/physics_layer_0/angular_velocity = 0.0
20:2/0 = 0
20:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
20:2/0/physics_layer_0/angular_velocity = 0.0
12:3/0 = 0
12:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
12:3/0/physics_layer_0/angular_velocity = 0.0
13:3/0 = 0
13:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
13:3/0/physics_layer_0/angular_velocity = 0.0
14:3/0 = 0
14:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
14:3/0/physics_layer_0/angular_velocity = 0.0
15:3/0 = 0
15:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
15:3/0/physics_layer_0/angular_velocity = 0.0
16:3/0 = 0
16:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
16:3/0/physics_layer_0/angular_velocity = 0.0
17:3/0 = 0
17:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
17:3/0/physics_layer_0/angular_velocity = 0.0
18:3/0 = 0
18:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
18:3/0/physics_layer_0/angular_velocity = 0.0
19:3/0 = 0
19:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
19:3/0/physics_layer_0/angular_velocity = 0.0
0:7/0 = 0
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0 = 0
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0 = 0
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0 = 0
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0 = 0
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0 = 0
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
9:7/0 = 0
9:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:7/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0
9:8/0 = 0
9:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:8/0/physics_layer_0/angular_velocity = 0.0
0:9/0 = 0
0:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:9/0/physics_layer_0/angular_velocity = 0.0
1:9/0 = 0
1:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:9/0/physics_layer_0/angular_velocity = 0.0
2:9/0 = 0
2:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:9/0/physics_layer_0/angular_velocity = 0.0
3:9/0 = 0
3:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:9/0/physics_layer_0/angular_velocity = 0.0
4:9/0 = 0
4:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:9/0/physics_layer_0/angular_velocity = 0.0
5:9/0 = 0
5:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:9/0/physics_layer_0/angular_velocity = 0.0
6:9/0 = 0
6:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:9/0/physics_layer_0/angular_velocity = 0.0
7:9/0 = 0
7:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:9/0/physics_layer_0/angular_velocity = 0.0
8:9/0 = 0
8:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:9/0/physics_layer_0/angular_velocity = 0.0
9:9/0 = 0
9:9/0/physics_layer_0/linear_velocity = Vector2(0, 0)
9:9/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSetScenesCollectionSource" id="TileSetScenesCollectionSource_vcjwg"]
resource_name = "obstacles"
scenes/1/scene = ExtResource("5_mc1tl")

[sub_resource type="TileSet" id="TileSet_8f40p"]
tile_size = Vector2i(100, 100)
physics_layer_0/collision_layer = 1
terrain_set_0/mode = 1
terrain_set_0/terrain_0/name = "Terrain 0"
terrain_set_0/terrain_0/color = Color(0.5, 0.34375, 0.25, 1)
sources/0 = SubResource("TileSetAtlasSource_ycmyg")
sources/1 = SubResource("TileSetScenesCollectionSource_vcjwg")
script = SubResource("GDScript_lleje")

[sub_resource type="GDScript" id="GDScript_qb1cc"]
script/source = "extends Area2D

@export
var level_switcher : Node


func _on_area_2d_body_entered(body: Node2D) -> void:
	level_switcher.call_deferred(\"change_scene\")
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_viwps"]
size = Vector2(169.5, 81.5)

[sub_resource type="Shader" id="Shader_meate"]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : source_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cdlp1"]
shader = SubResource("Shader_meate")
angle = 0.237
color = Color(1, 0.901961, 0.65098, 0.854902)
cutoff = 0.269
edge_fade = 0.232
falloff = 0.355
hdr = false
position = 0.039
ray1_density = 10.826
ray2_density = 30.543
ray2_intensity = 0.3
seed = 5.0
speed = 1.0
spread = 0.902

[sub_resource type="RectangleShape2D" id="RectangleShape2D_1glcm"]
size = Vector2(167, 1756)

[node name="level01" type="Node2D"]

[node name="Player" parent="." instance=ExtResource("1")]
position = Vector2(595, 524)

[node name="SDPlatform2" parent="." instance=ExtResource("3")]
position = Vector2(4160, 535)

[node name="SDPlatform" parent="." instance=ExtResource("3")]
position = Vector2(3706, 481)

[node name="PlatformMover" parent="." instance=ExtResource("4")]
position = Vector2(1205, 488)

[node name="Position2D" type="Marker2D" parent="PlatformMover"]
position = Vector2(793, 0)

[node name="TileMap" type="TileMap" parent="."]
scale = Vector2(0.5, 0.5)
tile_set = SubResource("TileSet_8f40p")
format = 2
layer_0/tile_data = PackedInt32Array(917523, 131072, 1, 851987, 131072, 1, 786451, 131072, 0, 917522, 65536, 1, 851986, 65536, 1, 786450, 65536, 0, 917521, 65536, 1, 851985, 65536, 1, 786449, 65536, 0, 917520, 65536, 1, 851984, 65536, 1, 786448, 65536, 0, 917519, 65536, 1, 851983, 65536, 1, 786447, 65536, 0, 917518, 65536, 1, 851982, 65536, 1, 786446, 65536, 0, 917517, 65536, 1, 851981, 65536, 1, 786445, 65536, 0, 917516, 65536, 1, 851980, 65536, 1, 786444, 65536, 0, 917515, 65536, 1, 851979, 65536, 1, 786443, 65536, 0, 917514, 65536, 1, 851978, 65536, 1, 786442, 65536, 0, 917513, 65536, 1, 851977, 65536, 1, 786441, 65536, 0, 917512, 0, 1, 851976, 0, 1, 786440, 0, 0, 1572883, 131072, 1, 1507347, 131072, 1, 1441811, 131072, 1, 1376275, 131072, 1, 1310739, 131072, 1, 1245203, 131072, 1, 1179667, 65536, 1, 1114131, 131072, 1, 1048595, 131072, 1, 983059, 131072, 1, 1572882, 65536, 1, 1507346, 65536, 1, 1441810, 65536, 1, 1376274, 65536, 1, 1310738, 65536, 1, 1245202, 65536, 1, 1179666, 65536, 1, 1114130, 65536, 1, 1048594, 65536, 1, 983058, 65536, 1, 1572881, 65536, 1, 1507345, 65536, 1, 1441809, 65536, 1, 1376273, 65536, 1, 1310737, 65536, 1, 1245201, 65536, 1, 1179665, 65536, 1, 1114129, 65536, 1, 1048593, 65536, 1, 983057, 65536, 1, 1572880, 65536, 1, 1507344, 65536, 1, 1441808, 65536, 1, 1376272, 65536, 1, 1310736, 65536, 1, 1245200, 65536, 1, 1179664, 65536, 1, 1114128, 65536, 1, 1048592, 65536, 1, 983056, 65536, 1, 1572879, 65536, 1, 1507343, 65536, 1, 1441807, 65536, 1, 1376271, 65536, 1, 1310735, 65536, 1, 1245199, 65536, 1, 1179663, 65536, 1, 1114127, 65536, 1, 1048591, 65536, 1, 983055, 65536, 1, 1572878, 65536, 1, 1507342, 65536, 1, 1441806, 65536, 1, 1376270, 65536, 1, 1310734, 65536, 1, 1245198, 65536, 1, 1179662, 65536, 1, 1114126, 65536, 1, 1048590, 65536, 1, 983054, 65536, 1, 1572877, 65536, 1, 1507341, 65536, 1, 1441805, 65536, 1, 1376269, 65536, 1, 1310733, 65536, 1, 1245197, 65536, 1, 1179661, 65536, 1, 1114125, 65536, 1, 1048589, 65536, 1, 983053, 65536, 1, 1572876, 65536, 1, 1507340, 65536, 1, 1441804, 65536, 1, 1376268, 65536, 1, 1310732, 65536, 1, 1245196, 65536, 1, 1179660, 65536, 1, 1114124, 65536, 1, 1048588, 65536, 1, 983052, 65536, 1, 1572875, 65536, 1, 1507339, 65536, 1, 1441803, 65536, 1, 1376267, 65536, 1, 1310731, 65536, 1, 1245195, 65536, 1, 1179659, 65536, 1, 1114123, 65536, 1, 1048587, 65536, 1, 983051, 65536, 1, 1572874, 65536, 1, 1507338, 65536, 1, 1441802, 65536, 1, 1376266, 65536, 1, 1310730, 65536, 1, 1245194, 65536, 1, 1179658, 65536, 1, 1114122, 65536, 1, 1048586, 65536, 1, 983050, 65536, 1, 1572873, 65536, 1, 1507337, 65536, 1, 1441801, 65536, 1, 1376265, 65536, 1, 1310729, 65536, 1, 1245193, 65536, 1, 1179657, 65536, 1, 1114121, 65536, 1, 1048585, 65536, 1, 983049, 65536, 1, 1572872, 0, 1, 1507336, 0, 1, 1441800, 0, 1, 1376264, 0, 1, 1310728, 0, 1, 1245192, 0, 1, 1179656, 0, 1, 1114120, 0, 1, 1048584, 0, 1, 983048, 0, 1, 1572930, 131072, 1, 1507394, 131072, 1, 1441858, 131072, 1, 1376322, 131072, 1, 1310786, 131072, 1, 1245250, 131072, 1, 1179714, 131072, 1, 1114178, 131072, 1, 1048642, 131072, 1, 983106, 131072, 1, 917570, 131072, 1, 852034, 131072, 1, 1572929, 65536, 1, 1507393, 65536, 1, 1441857, 65536, 1, 1376321, 65536, 1, 1310785, 65536, 1, 1245249, 65536, 1, 1179713, 65536, 1, 1114177, 65536, 1, 1048641, 65536, 1, 983105, 65536, 1, 917569, 65536, 1, 852033, 65536, 1, 1572928, 65536, 1, 1507392, 65536, 1, 1441856, 65536, 1, 1376320, 65536, 1, 1310784, 65536, 1, 1245248, 65536, 1, 1179712, 65536, 1, 1114176, 65536, 1, 1048640, 65536, 1, 983104, 65536, 1, 917568, 65536, 1, 852032, 65536, 1, 1572927, 65536, 1, 1507391, 65536, 1, 1441855, 65536, 1, 1376319, 65536, 1, 1310783, 65536, 1, 1245247, 65536, 1, 1179711, 65536, 1, 1114175, 65536, 1, 1048639, 65536, 1, 983103, 65536, 1, 917567, 65536, 1, 852031, 65536, 1, 1572926, 65536, 1, 1507390, 65536, 1, 1441854, 65536, 1, 1376318, 65536, 1, 1310782, 65536, 1, 1245246, 65536, 1, 1179710, 65536, 1, 1114174, 65536, 1, 1048638, 65536, 1, 983102, 65536, 1, 917566, 65536, 1, 852030, 65536, 1, 1572925, 65536, 1, 1507389, 65536, 1, 1441853, 65536, 1, 1376317, 65536, 1, 1310781, 65536, 1, 1245245, 65536, 1, 1179709, 65536, 1, 1114173, 65536, 1, 1048637, 65536, 1, 983101, 65536, 1, 917565, 65536, 1, 852029, 65536, 1, 1572924, 65536, 1, 1507388, 65536, 1, 1441852, 65536, 1, 1376316, 65536, 1, 1310780, 65536, 1, 1245244, 65536, 1, 1179708, 65536, 1, 1114172, 65536, 1, 1048636, 65536, 1, 983100, 65536, 1, 917564, 65536, 1, 852028, 65536, 1, 1572923, 65536, 1, 1507387, 65536, 1, 1441851, 65536, 1, 1376315, 65536, 1, 1310779, 65536, 1, 1245243, 65536, 1, 1179707, 65536, 1, 1114171, 65536, 1, 1048635, 65536, 1, 983099, 65536, 1, 917563, 65536, 1, 852027, 65536, 1, 1572922, 65536, 1, 1507386, 65536, 1, 1441850, 65536, 1, 1376314, 65536, 1, 1310778, 65536, 1, 1245242, 65536, 1, 1179706, 65536, 1, 1114170, 65536, 1, 1048634, 65536, 1, 983098, 65536, 1, 917562, 65536, 1, 852026, 65536, 1, 1572921, 65536, 1, 1507385, 65536, 1, 1441849, 65536, 1, 1376313, 65536, 1, 1310777, 65536, 1, 1245241, 65536, 1, 1179705, 65536, 1, 1114169, 65536, 1, 1048633, 65536, 1, 983097, 65536, 1, 917561, 65536, 1, 852025, 65536, 1, 1572920, 65536, 1, 1507384, 65536, 1, 1441848, 65536, 1, 1376312, 65536, 1, 1310776, 65536, 1, 1245240, 65536, 1, 1179704, 65536, 1, 1114168, 65536, 1, 1048632, 65536, 1, 983096, 65536, 1, 917560, 65536, 1, 852024, 65536, 1, 1572919, 65536, 1, 1507383, 65536, 1, 1441847, 65536, 1, 1376311, 65536, 1, 1310775, 65536, 1, 1245239, 65536, 1, 1179703, 65536, 1, 1114167, 65536, 1, 1048631, 65536, 1, 983095, 65536, 1, 917559, 65536, 1, 852023, 65536, 1, 1572918, 65536, 1, 1507382, 65536, 1, 1441846, 65536, 1, 1376310, 65536, 1, 1310774, 65536, 1, 1245238, 65536, 1, 1179702, 65536, 1, 1114166, 65536, 1, 1048630, 65536, 1, 983094, 65536, 1, 917558, 65536, 1, 852022, 65536, 1, 1572917, 65536, 1, 1507381, 65536, 1, 1441845, 65536, 1, 1376309, 65536, 1, 1310773, 65536, 1, 1245237, 65536, 1, 1179701, 65536, 1, 1114165, 65536, 1, 1048629, 65536, 1, 983093, 65536, 1, 917557, 65536, 1, 852021, 65536, 1, 1572916, 65536, 1, 1507380, 65536, 1, 1441844, 65536, 1, 1376308, 65536, 1, 1310772, 65536, 1, 1245236, 65536, 1, 1179700, 65536, 1, 1114164, 65536, 1, 1048628, 65536, 1, 983092, 65536, 1, 917556, 65536, 1, 852020, 65536, 1, 1572915, 65536, 1, 1507379, 65536, 1, 1441843, 65536, 1, 1376307, 65536, 1, 1310771, 65536, 1, 1245235, 65536, 1, 1179699, 65536, 1, 1114163, 65536, 1, 1048627, 65536, 1, 983091, 65536, 1, 917555, 65536, 1, 852019, 65536, 1, 1572914, 65536, 1, 1507378, 65536, 1, 1441842, 65536, 1, 1376306, 65536, 1, 1310770, 65536, 1, 1245234, 65536, 1, 1179698, 65536, 1, 1114162, 65536, 1, 1048626, 65536, 1, 983090, 65536, 1, 917554, 65536, 1, 852018, 65536, 1, 1572913, 65536, 1, 1507377, 65536, 1, 1441841, 65536, 1, 1376305, 65536, 1, 1310769, 65536, 1, 1245233, 65536, 1, 1179697, 65536, 1, 1114161, 65536, 1, 1048625, 65536, 1, 983089, 65536, 1, 917553, 65536, 1, 852017, 65536, 1, 1572912, 65536, 1, 1507376, 65536, 1, 1441840, 65536, 1, 1376304, 65536, 1, 1310768, 65536, 1, 1245232, 65536, 1, 1179696, 65536, 1, 1114160, 65536, 1, 1048624, 65536, 1, 983088, 65536, 1, 917552, 65536, 1, 852016, 65536, 1, 1572911, 65536, 1, 1507375, 65536, 1, 1441839, 65536, 1, 1376303, 65536, 1, 1310767, 65536, 1, 1245231, 65536, 1, 1179695, 65536, 1, 1114159, 65536, 1, 1048623, 65536, 1, 983087, 65536, 1, 917551, 65536, 1, 852015, 65536, 1, 1572910, 65536, 1, 1507374, 65536, 1, 1441838, 65536, 1, 1376302, 65536, 1, 1310766, 65536, 1, 1245230, 65536, 1, 1179694, 65536, 1, 1114158, 65536, 1, 1048622, 65536, 1, 983086, 65536, 1, 917550, 65536, 1, 852014, 65536, 1, 1572909, 65536, 1, 1507373, 65536, 1, 1441837, 65536, 1, 1376301, 65536, 1, 1310765, 65536, 1, 1245229, 65536, 1, 1179693, 65536, 1, 1114157, 65536, 1, 1048621, 65536, 1, 983085, 65536, 1, 917549, 65536, 1, 852013, 65536, 1, 1572908, 0, 1, 1507372, 0, 1, 1441836, 0, 1, 1376300, 0, 1, 1310764, 0, 1, 1245228, 0, 1, 1179692, 65536, 1, 1114156, 0, 1, 1048620, 0, 1, 983084, 0, 1, 917548, 0, 1, 852012, 0, 1, 786498, 131072, 1, 786497, 65536, 1, 786496, 65536, 1, 786495, 65536, 1, 786494, 65536, 1, 786493, 65536, 1, 786492, 65536, 1, 786491, 65536, 1, 786490, 65536, 1, 786489, 65536, 1, 786488, 65536, 1, 786487, 65536, 1, 786486, 65536, 0, 786485, 65536, 0, 786484, 65536, 0, 786483, 65536, 0, 786482, 65536, 0, 786481, 65536, 0, 786480, 65536, 0, 786479, 65536, 0, 786478, 65536, 0, 786477, 65536, 0, 786476, 0, 0, 1179691, 131072, 0, 1179690, 65536, 0, 1179689, 65536, 0, 1179688, 65536, 0, 1179687, 65536, 0, 1179686, 65536, 0, 1179685, 65536, 0, 1179684, 65536, 0, 1179683, 65536, 0, 1179682, 65536, 0, 1179681, 65536, 0, 1179680, 65536, 0, 1179679, 65536, 0, 1179678, 65536, 0, 1179677, 65536, 0, 1179676, 65536, 0, 1179675, 65536, 0, 1179674, 65536, 0, 1179673, 65536, 0, 1179672, 65536, 0, 1179671, 65536, 0, 1179670, 65536, 0, 1179669, 65536, 0, 1179668, 0, 0, 1114132, 1, 65536, 1114133, 1, 65536, 1114134, 1, 65536, 1114135, 1, 65536, 1114136, 1, 65536, 1114137, 1, 65536, 1114138, 1, 65536, 1114139, 1, 65536, 1114140, 1, 65536, 1114141, 1, 65536, 1114142, 1, 65536, 1114143, 1, 65536, 1114144, 1, 65536, 1114145, 1, 65536, 1114146, 1, 65536, 1114147, 1, 65536, 1114148, 1, 65536, 1114149, 1, 65536, 1114150, 1, 65536, 1114151, 1, 65536, 1114152, 1, 65536, 1114153, 1, 65536, 1114154, 1, 65536, 1114155, 1, 65536, 720962, 131072, 1, 655426, 131072, 1, 589890, 131072, 1, 524354, 131072, 0, 720961, 65536, 1, 655425, 65536, 1, 589889, 65536, 1, 524353, 65536, 0, 720960, 65536, 1, 655424, 65536, 1, 589888, 65536, 1, 524352, 65536, 0, 720959, 65536, 1, 655423, 65536, 1, 589887, 65536, 1, 524351, 65536, 0, 720958, 65536, 1, 655422, 65536, 1, 589886, 65536, 1, 524350, 65536, 0, 720957, 65536, 1, 655421, 65536, 1, 589885, 65536, 1, 524349, 65536, 0, 720956, 65536, 1, 655420, 65536, 1, 589884, 65536, 1, 524348, 65536, 0, 720955, 65536, 1, 655419, 65536, 1, 589883, 65536, 1, 524347, 65536, 0, 720954, 65536, 1, 655418, 65536, 1, 589882, 65536, 1, 524346, 65536, 0, 720953, 65536, 1, 655417, 65536, 1, 589881, 65536, 1, 524345, 65536, 0, 720952, 65536, 1, 655416, 65536, 1, 589880, 65536, 1, 524344, 65536, 0, 720951, 0, 1, 655415, 0, 1, 589879, 0, 1, 524343, 0, 0, 1572958, 131072, 2, 1507422, 131072, 1, 1441886, 131072, 1, 1376350, 131072, 1, 1310814, 131072, 1, 1245278, 131072, 1, 1179742, 131072, 1, 1114206, 131072, 1, 1048670, 131072, 1, 983134, 131072, 1, 917598, 131072, 1, 852062, 131072, 1, 786526, 131072, 1, 720990, 131072, 1, 655454, 131072, 1, 589918, 131072, 1, 524382, 131072, 0, 1572957, 65536, 2, 1507421, 65536, 1, 1441885, 65536, 1, 1376349, 65536, 1, 1310813, 65536, 1, 1245277, 65536, 1, 1179741, 65536, 1, 1114205, 65536, 1, 1048669, 65536, 1, 983133, 65536, 1, 917597, 65536, 1, 852061, 65536, 1, 786525, 65536, 1, 720989, 65536, 1, 655453, 65536, 1, 589917, 65536, 1, 524381, 65536, 0, 1572956, 65536, 2, 1507420, 65536, 1, 1441884, 65536, 1, 1376348, 65536, 1, 1310812, 65536, 1, 1245276, 65536, 1, 1179740, 65536, 1, 1114204, 65536, 1, 1048668, 65536, 1, 983132, 65536, 1, 917596, 65536, 1, 852060, 65536, 1, 786524, 65536, 1, 720988, 65536, 1, 655452, 65536, 1, 589916, 65536, 1, 524380, 65536, 0, 1572955, 65536, 2, 1507419, 65536, 1, 1441883, 65536, 1, 1376347, 65536, 1, 1310811, 65536, 1, 1245275, 65536, 1, 1179739, 65536, 1, 1114203, 65536, 1, 1048667, 65536, 1, 983131, 65536, 1, 917595, 65536, 1, 852059, 65536, 1, 786523, 65536, 1, 720987, 65536, 1, 655451, 65536, 1, 589915, 65536, 1, 524379, 65536, 0, 1572954, 0, 2, 1507418, 0, 1, 1441882, 0, 1, 1376346, 0, 1, 1310810, 0, 1, 1245274, 0, 1, 1179738, 0, 1, 1114202, 0, 1, 1048666, 0, 1, 983130, 0, 1, 917594, 0, 1, 852058, 0, 1, 786522, 0, 1, 720986, 0, 1, 655450, 0, 1, 589914, 0, 1, 524378, 0, 0, 458854, 131072, 2, 393318, 131072, 0, 458853, 65536, 2, 393317, 65536, 0, 458852, 65536, 2, 393316, 65536, 0, 458851, 65536, 2, 393315, 65536, 0, 458850, 0, 2, 393314, 0, 0, 262259, 131072, 2, 196723, 131072, 0, 262258, 65536, 2, 196722, 65536, 0, 262257, 65536, 2, 196721, 65536, 0, 262256, 65536, 2, 196720, 65536, 0, 262255, 0, 2, 196719, 0, 0, 393339, 131072, 2, 327803, 131072, 0, 393338, 65536, 2, 327802, 65536, 0, 393337, 0, 2, 327801, 0, 0, 1900701, 131072, 2, 1835165, 131072, 1, 1769629, 131072, 1, 1704093, 131072, 1, 1638557, 131072, 1, 1573021, 131072, 1, 1507485, 131072, 1, 1441949, 131072, 1, 1376413, 131072, 1, 1310877, 131072, 1, 1245341, 131072, 1, 1179805, 131072, 1, 1114269, 131072, 1, 1048733, 131072, 1, 983197, 131072, 1, 917661, 131072, 1, 852125, 131072, 1, 786589, 131072, 1, 721053, 131072, 1, 655517, 131072, 1, 589981, 131072, 0, 1900700, 65536, 2, 1835164, 65536, 1, 1769628, 65536, 1, 1704092, 65536, 1, 1638556, 65536, 1, 1573020, 65536, 1, 1507484, 65536, 1, 1441948, 65536, 1, 1376412, 65536, 1, 1310876, 65536, 1, 1245340, 65536, 1, 1179804, 65536, 1, 1114268, 65536, 1, 1048732, 65536, 1, 983196, 65536, 1, 917660, 65536, 1, 852124, 65536, 1, 786588, 65536, 1, 721052, 65536, 1, 655516, 65536, 1, 589980, 65536, 0, 1900699, 65536, 2, 1835163, 65536, 1, 1769627, 65536, 1, 1704091, 65536, 1, 1638555, 65536, 1, 1573019, 65536, 1, 1507483, 65536, 1, 1441947, 65536, 1, 1376411, 65536, 1, 1310875, 65536, 1, 1245339, 65536, 1, 1179803, 65536, 1, 1114267, 65536, 1, 1048731, 65536, 1, 983195, 65536, 1, 917659, 65536, 1, 852123, 65536, 1, 786587, 65536, 1, 721051, 65536, 1, 655515, 65536, 1, 589979, 65536, 0, 1900698, 65536, 2, 1835162, 65536, 1, 1769626, 65536, 1, 1704090, 65536, 1, 1638554, 65536, 1, 1573018, 65536, 1, 1507482, 65536, 1, 1441946, 65536, 1, 1376410, 65536, 1, 1310874, 65536, 1, 1245338, 65536, 1, 1179802, 65536, 1, 1114266, 65536, 1, 1048730, 65536, 1, 983194, 65536, 1, 917658, 65536, 1, 852122, 65536, 1, 786586, 65536, 1, 721050, 65536, 1, 655514, 65536, 1, 589978, 65536, 0, 1900697, 65536, 2, 1835161, 65536, 1, 1769625, 65536, 1, 1704089, 65536, 1, 1638553, 65536, 1, 1573017, 65536, 1, 1507481, 65536, 1, 1441945, 65536, 1, 1376409, 65536, 1, 1310873, 65536, 1, 1245337, 65536, 1, 1179801, 65536, 1, 1114265, 65536, 1, 1048729, 65536, 1, 983193, 65536, 1, 917657, 65536, 1, 852121, 65536, 1, 786585, 65536, 1, 721049, 65536, 1, 655513, 65536, 1, 589977, 65536, 0, 1900696, 65536, 2, 1835160, 65536, 1, 1769624, 65536, 1, 1704088, 65536, 1, 1638552, 65536, 1, 1573016, 65536, 1, 1507480, 65536, 1, 1441944, 65536, 1, 1376408, 65536, 1, 1310872, 65536, 1, 1245336, 65536, 1, 1179800, 65536, 1, 1114264, 65536, 1, 1048728, 65536, 1, 983192, 65536, 1, 917656, 65536, 1, 852120, 65536, 1, 786584, 65536, 1, 721048, 65536, 1, 655512, 65536, 1, 589976, 65536, 0, 1900695, 65536, 2, 1835159, 65536, 1, 1769623, 65536, 1, 1704087, 65536, 1, 1638551, 65536, 1, 1573015, 65536, 1, 1507479, 65536, 1, 1441943, 65536, 1, 1376407, 65536, 1, 1310871, 65536, 1, 1245335, 65536, 1, 1179799, 65536, 1, 1114263, 65536, 1, 1048727, 65536, 1, 983191, 65536, 1, 917655, 65536, 1, 852119, 65536, 1, 786583, 65536, 1, 721047, 65536, 1, 655511, 65536, 1, 589975, 65536, 0, 1900694, 65536, 2, 1835158, 65536, 1, 1769622, 65536, 1, 1704086, 65536, 1, 1638550, 65536, 1, 1573014, 65536, 1, 1507478, 65536, 1, 1441942, 65536, 1, 1376406, 65536, 1, 1310870, 65536, 1, 1245334, 65536, 1, 1179798, 65536, 1, 1114262, 65536, 1, 1048726, 65536, 1, 983190, 65536, 1, 917654, 65536, 1, 852118, 65536, 1, 786582, 65536, 1, 721046, 65536, 1, 655510, 65536, 1, 589974, 65536, 0, 1900693, 65536, 2, 1835157, 65536, 1, 1769621, 65536, 1, 1704085, 65536, 1, 1638549, 65536, 1, 1573013, 65536, 1, 1507477, 65536, 1, 1441941, 65536, 1, 1376405, 65536, 1, 1310869, 65536, 1, 1245333, 65536, 1, 1179797, 65536, 1, 1114261, 65536, 1, 1048725, 65536, 1, 983189, 65536, 1, 917653, 65536, 1, 852117, 65536, 1, 786581, 65536, 1, 721045, 65536, 1, 655509, 65536, 1, 589973, 65536, 0, 1900692, 65536, 2, 1835156, 65536, 1, 1769620, 65536, 1, 1704084, 65536, 1, 1638548, 65536, 1, 1573012, 65536, 1, 1507476, 65536, 1, 1441940, 65536, 1, 1376404, 65536, 1, 1310868, 65536, 1, 1245332, 65536, 1, 1179796, 65536, 1, 1114260, 65536, 1, 1048724, 65536, 1, 983188, 65536, 1, 917652, 65536, 1, 852116, 65536, 1, 786580, 65536, 1, 721044, 65536, 1, 655508, 65536, 1, 589972, 65536, 0, 1900691, 65536, 2, 1835155, 65536, 1, 1769619, 65536, 1, 1704083, 65536, 1, 1638547, 65536, 1, 1573011, 65536, 1, 1507475, 65536, 1, 1441939, 65536, 1, 1376403, 65536, 1, 1310867, 65536, 1, 1245331, 65536, 1, 1179795, 65536, 1, 1114259, 65536, 1, 1048723, 65536, 1, 983187, 65536, 1, 917651, 65536, 1, 852115, 65536, 1, 786579, 65536, 1, 721043, 65536, 1, 655507, 65536, 1, 589971, 65536, 0, 1900690, 0, 2, 1835154, 0, 1, 1769618, 0, 1, 1704082, 0, 1, 1638546, 0, 1, 1573010, 0, 1, 1507474, 0, 1, 1441938, 0, 1, 1376402, 0, 1, 1310866, 0, 1, 1245330, 0, 1, 1179794, 0, 1, 1114258, 0, 1, 1048722, 0, 1, 983186, 0, 1, 917650, 0, 1, 852114, 0, 1, 786578, 0, 1, 721042, 0, 1, 655506, 0, 1, 589970, 0, 0, 196744, 131072, 2, 131208, 131072, 0, 196743, 65536, 2, 131207, 65536, 0, 196742, 65536, 2, 131206, 65536, 0, 196741, 0, 2, 131205, 0, 0)

[node name="MelonSeeds" type="Node" parent="."]

[node name="MelonSeed" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(760, 569)

[node name="MelonSeed2" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(826, 567)

[node name="MelonSeed3" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(896, 565)

[node name="MelonSeed4" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(2301, 563)

[node name="MelonSeed5" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(2398, 564)

[node name="MelonSeed6" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(2478, 563)

[node name="MelonSeed7" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(2553, 564)

[node name="MelonSeed8" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(2893, 361)

[node name="MelonSeed9" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(2993, 360)

[node name="MelonSeed10" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(3084, 358)

[node name="MelonSeed11" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(3175, 359)

[node name="MelonSeed12" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(3175, 359)

[node name="MelonSeed13" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(3656, 408)

[node name="MelonSeed14" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(3747, 407)

[node name="MelonSeed15" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4109, 460)

[node name="MelonSeed16" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4192, 457)

[node name="MelonSeed17" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4550, 374)

[node name="MelonSeed18" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4625, 372)

[node name="MelonSeed19" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4706, 371)

[node name="MelonSeed20" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4766, 300)

[node name="MelonSeed24" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4856, 262)

[node name="MelonSeed21" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(4958, 262)

[node name="MelonSeed22" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(5036, 262)

[node name="MelonSeed23" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(5103, 260)

[node name="MelonSeed25" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(5372, 120)

[node name="MelonSeed26" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(5679, 119)

[node name="MelonSeed28" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(5757, 118)

[node name="MelonSeed29" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(6087, 219)

[node name="MelonSeed30" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(6150, 219)

[node name="MelonSeed31" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(6150, 219)

[node name="MelonSeed35" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(6750, 72)

[node name="MelonSeed36" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(6809, 71)

[node name="MelonSeed37" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(7071, 38)

[node name="MelonSeed38" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(7175, 90)

[node name="MelonSeed41" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(7397, 411)

[node name="MelonSeed40" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(7348, 309)

[node name="MelonSeed39" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(7270, 190)

[node name="MelonSeed34" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(6690, 75)

[node name="MelonSeed27" parent="MelonSeeds" instance=ExtResource("5")]
position = Vector2(5596, 119)

[node name="Area2D" type="Area2D" parent="." node_paths=PackedStringArray("level_switcher")]
visible = false
script = SubResource("GDScript_qb1cc")
level_switcher = NodePath("LevelSwitcher")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(1240, 152)
shape = SubResource("RectangleShape2D_viwps")

[node name="LevelSwitcher" type="Node2D" parent="Area2D"]
script = ExtResource("7_2k86t")
scene_path = "res://src/levels/level02/level02.tscn"

[node name="GodRay" type="Node2D" parent="."]
position = Vector2(7159, -137)

[node name="ColorRect" type="ColorRect" parent="GodRay"]
material = SubResource("ShaderMaterial_cdlp1")
offset_left = 61.0
offset_top = -1149.0
offset_right = 1372.0
offset_bottom = 918.0

[node name="levelborders" type="Node" parent="."]

[node name="StaticBody2D" type="StaticBody2D" parent="levelborders"]
collision_layer = 256
collision_mask = 256

[node name="CollisionShape2D" type="CollisionShape2D" parent="levelborders/StaticBody2D"]
position = Vector2(-241, 828)
shape = SubResource("RectangleShape2D_1glcm")

[node name="StaticBody2D2" type="StaticBody2D" parent="levelborders"]
position = Vector2(8567, -71)
collision_layer = 256
collision_mask = 256

[node name="CollisionShape2D" type="CollisionShape2D" parent="levelborders/StaticBody2D2"]
position = Vector2(-241, 828)
shape = SubResource("RectangleShape2D_1glcm")

[node name="StaticBody2D3" type="StaticBody2D" parent="levelborders"]
position = Vector2(6543, 514)
rotation = -1.5751
collision_layer = 256
collision_mask = 256

[node name="CollisionShape2D" type="CollisionShape2D" parent="levelborders/StaticBody2D3"]
position = Vector2(-241, 828)
shape = SubResource("RectangleShape2D_1glcm")

[connection signal="body_entered" from="Area2D" to="Area2D" method="_on_area_2d_body_entered"]
