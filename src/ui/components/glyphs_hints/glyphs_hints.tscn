[gd_scene load_steps=5 format=3 uid="uid://36dqyaig570n"]

[ext_resource type="Shader" path="res://src/postprocessing/shaders/InvertedVeniette.gdshader" id="1_8rwff"]
[ext_resource type="PackedScene" uid="uid://deu7cyxnp2na0" path="res://src/ui/components/vignette_background.tscn" id="1_o4m7h"]

[sub_resource type="GDScript" id="GDScript_resde"]
script/source = "extends Control

const GLYPHS_HINT = preload(\"res://src/ui/components/glyphs_hints/glyphs_hint/glyphs_hint.tscn\") 

@export
var bg : ColorRect

var bg_intensity : float
var bg_opacity : float
var bg_rgb : Color

@onready
var hint_height = GLYPHS_HINT.instantiate().size.y / 1.5

@onready
var bg_base_size : Vector2 = $VignetteBackground.size
@onready
var bg_base_position : Vector2 = $VignetteBackground.position

@onready
var container_base_size : Vector2 = $VBoxContainer.size
@onready
var container_base_position : Vector2 = $VBoxContainer.position + $VBoxContainer.size / 2

var _data

func _ready() -> void:
	bg_intensity = bg.intensity
	bg_opacity = bg.opacity
	bg_rgb = bg.rgb
	
	bg.rgb.a = 0.0
	modulate.a = 0.0
	visible = true
	
	InputHelper.device_changed.connect(_on_device_changed)

func _on_device_changed(_device, _device_index) -> void:
	print(\"changed\")
	if _data:
		set_glyphes(_data)

func show() -> void:
	var t = create_tween()
	
	t.set_parallel(true)
	
	t.tween_property(bg, \"rgb:a\", bg_rgb.a, 1.0).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_EXPO)
	t.tween_property(self, \"modulate:a\", 1.0, 0.2).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_EXPO)

func hide() -> void:
	var t = create_tween()
	
	t.set_parallel(true)
	
	t.tween_property(bg, \"rgb:a\", 0.0, 1.0).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_EXPO)
	t.tween_property(self, \"modulate:a\", 0.0, 0.5).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_EXPO)

func set_glyphes(data : Dictionary):
	_data = data
	clear()
	
	for key in data.keys():
		var i = GLYPHS_HINT.instantiate()
		$VBoxContainer.add_child(i)
		
		i.text = key
		i.icon = GlyphManager.get_input_icon(data[key])
	
	adjust_sizing()

func adjust_sizing() -> void:
	$VBoxContainer.size.y =  $VBoxContainer.get_child_count() * hint_height
	$VignetteBackground.size.y = bg_base_size.y + $VBoxContainer.get_child_count() * hint_height
	$VBoxContainer.position.y = container_base_position.y - $VBoxContainer.get_child_count() * hint_height
	$VignetteBackground.position.y = bg_base_position.y - $VBoxContainer.get_child_count() * hint_height
	

func clear() -> void:
	for child in $VBoxContainer.get_children():
		$VBoxContainer.remove_child(child)
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jcx45"]
resource_local_to_scene = true
shader = ExtResource("1_8rwff")
vignette_intensity = 4.307
vignette_opacity = 0.7
vignette_rgb = Color(0, 0, 0, 0.498039)

[node name="GlyphsHints" type="Control" node_paths=PackedStringArray("bg")]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource("GDScript_resde")
bg = NodePath("VignetteBackground")

[node name="VignetteBackground" parent="." instance=ExtResource("1_o4m7h")]
material = SubResource("ShaderMaterial_jcx45")
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -454.0
offset_top = -128.0
offset_right = 66.0
offset_bottom = 28.0
grow_horizontal = 0
grow_vertical = 0
intensity = 4.307
opacity = 0.7
rgb = Color(0, 0, 0, 0.498039)
metadata/_edit_layout_mode = 1

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 1493.0
offset_top = 972.0
offset_right = -1.0
offset_bottom = -1.0
grow_horizontal = 2
grow_vertical = 2
metadata/_edit_layout_mode = 1
